// Generated by CoffeeScript 1.7.1
(function() {
  (function($) {
    var component_stash, del_category, edit_category;
    component_stash = {};
    del_category = "";
    edit_category = "";
    $(document.body).on("click", "a.new-category", function() {
      $("#new-category-modal-title").val("");
      return void 0;
    });
    $(document.body).on("click", "#new-category-modal-submit", function() {
      var component, title;
      component = 0;
      if (!("category" in component_stash)) {
        component = 1;
      }
      title = $("#new-category-modal-title").val();
      $.ajax({
        type: "POST",
        url: "/api/set/category/new",
        data: {
          component: component,
          id: $(".new-category:first").attr("data-board"),
          title: title
        },
        success: function(data) {
          var category;
          if (data.code !== 200) {
            console.log("ERROR: " + data.code);
          }
          if (component === 1) {
            component_stash.category = data.data.components;
          }
          category = component_stash.category;
          category = category.split("{{ c.id }}");
          category = category.join(data.data.id);
          category = category.replace("{{ c.title }}", title);
          $("div.categories").append(category);
          $("#new-category-modal").modal("hide");
          return window.taskSortable();
        },
        error: function(jqXHR, textStatus, err) {
          return console.log(err);
        }
      });
      return void 0;
    });
    $(document.body).on("click", ".category-edit", function() {
      edit_category = $(this).closest(".panel").attr("data-category");
      $("#edit-category-modal-title").val($(this).closest(".panel-heading").children(".panel-title").text());
      $("#edit-category-modal").modal("show");
      return void 0;
    });
    $(document.body).on("click", "#edit-category-modal-submit", function() {
      var title;
      title = $("#edit-category-modal-title").val();
      $.ajax({
        type: "POST",
        url: "/api/set/category/update",
        data: {
          id: edit_category,
          title: title
        },
        success: function(data) {
          console.log(data);
          if (data.code !== 200) {
            console.log("ERROR: " + data.code);
          }
          $(".panel[data-category='" + edit_category(+"'] .panel-heading .panel-title")).text(title);
          $("#edit-category-modal").modal("hide");
          return edit_category = "";
        },
        error: function(jqXHR, textStatus, err) {
          return console.log(err);
        }
      });
      return void 0;
    });
    $(document.body).on("click", ".category-delete", function() {
      del_category = $(this).closest(".panel").attr("data-category");
      $("#delete-category-modal").modal("show");
      return void 0;
    });
    $(document.body).on("click", "#delete-category-yes", function() {
      $.ajax({
        type: "POST",
        url: "/api/set/category/delete",
        data: {
          id: del_category
        },
        success: function(data) {
          if (data.code !== 200) {
            console.log("ERROR: " + data.code);
          }
          $("div.categories div.panel[data-category='" + del_category + "']").remove();
          $("#delete-category-modal").modal("hide");
          return del_category = "";
        },
        error: function(jqXHR, textStatus, err) {
          return console.log(err);
        }
      });
      return void 0;
    });
    $(document.body).on("click", "#delete-category-no", function() {
      $("#delete-category-modal").modal("hide");
      return void 0;
    });
    return $(".categories").sortable({
      handle: ".reorder",
      placeholder: "placeholder-category",
      stop: function(e, ui) {
        var c;
        console.log($(".categories").eq(0).attr("data-board"));
        return $.ajax({
          type: "POST",
          url: "/api/set/category/order",
          data: {
            id: $(".categories").eq(0).attr("data-board"),
            order: JSON.stringify((function() {
              var _i, _len, _ref, _results;
              _ref = $("div.categories").find(".category");
              _results = [];
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                c = _ref[_i];
                _results.push($(c).attr("data-category"));
              }
              return _results;
            })())
          },
          success: function(data) {
            if (data.code !== 200) {
              console.log("ERROR: " + data.code);
            }
            return console.log(data);
          },
          error: function(jqXHR, textStatus, err) {
            return console.log(err);
          }
        });
      }
    }).disableSelection();
  })(jQuery);

}).call(this);
